generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-1.0.x", "darwin-arm64"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id               String   @id @default(uuid())
    firstName        String
    lastName         String
    fatherName       String
    motherName       String
    username         String   @unique
    role             Role     @default(TECHNICIAN)
    center           String
    phone            String
    phoneNumber      String
    permanentAddress String
    passwordHash     String
    createdAt        DateTime @default(now())
    updatedAt        DateTime @updatedAt
}

model Vaccine {
    id                String              @id @default(uuid())
    name              String              @unique
    totalDose         Int
    createdAt         DateTime            @default(now())
    updatedAt         DateTime            @updatedAt
    certificates      Certificate[]
    VaccinationRecord VaccinationRecord[]
    providers         VaccineProvider[]
}

model VaccineProvider {
    id                String              @id @default(uuid())
    name              String
    vaccineId         String
    createdAt         DateTime            @default(now())
    updatedAt         DateTime            @updatedAt
    vaccine           Vaccine             @relation(fields: [vaccineId], references: [id])
    vaccinationRecords VaccinationRecord[]

    @@index([vaccineId])
}

model Certificate {
    id               String   @id @default(uuid())
    certificateNo    Int      @unique @default(autoincrement())
    nidNumber        String?
    passportNumber   String?
    nationality      String
    patientName      String
    dateOfBirth      DateTime
    gender           String
    vaccineId        String
    doseNumber       Int
    dateAdministered DateTime
    isActive         Boolean  @default(true)
    createdAt        DateTime @default(now())
    updatedAt        DateTime @updatedAt
    vaccine          Vaccine  @relation(fields: [vaccineId], references: [id])

    vaccinations VaccinationRecord[] // Relation to store multiple records

    @@index([certificateNo])
    @@index([nidNumber])
    @@index([passportNumber])
}

model VaccinationRecord {
    id                String   @id @default(uuid())
    certificateId     String
    vaccineId         String
    vaccineName       String
    doseNumber        Int
    dateAdministered  DateTime
    vaccinationCenter String
    vaccinatedById    String
    vaccinatedByName  String
    providerId        String
    provider          VaccineProvider @relation(fields: [providerId], references: [id])
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt

    certificate Certificate @relation(fields: [certificateId], references: [id])
    vaccine     Vaccine     @relation(fields: [vaccineId], references: [id])

    @@index([certificateId])
    @@index([vaccineId])
    @@index([vaccinatedById])
    @@index([providerId])
}

enum Role {
    ADMIN
    TECHNICIAN
}

enum Gender {
    MALE
    FEMALE
    OTHER
}
