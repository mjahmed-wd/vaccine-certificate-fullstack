version: "3.8"

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: frontend-prod
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
      args:
        - DATABASE_URL=${DATABASE_URL}
        - NEXTAUTH_URL=${NEXTAUTH_URL}
        - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
        - NODE_ENV=production
    restart: always
    command: sh -c "while ! nc -z postgres 5432; do sleep 1; done; npm start"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NODE_ENV=production
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data: